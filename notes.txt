Magesh Kuppan

Schedule:
    Commence    : 9:30 AM
    Tea Break   : 11:00 AM (20 mins)
    Lunch Break : 1:00 PM (1 hour)
    Tea Break   : 3:30 PM (20 mins)
    Wind up     : 5:30 PM

Methodology:
    * No powerpoint
    * 100% code driven

Repository:
    https://github.com/tkmagesh/ibm-advgo-mar-2023

About You:
    Name
    Experience in years
    Primary Skillset
    If you have attended MY go foundation class?
    Any basic topics you would like to revise?
        _ usage
        Error Handling
        Interfaces

Goroutine?


GRPC?
    + binary serialization
    + smaller payload size when compared to XML & JSON
    + communication patterns
        * request / response pattern
        * client streaming (many requests & one response)
        * server streaming (one request & many responses)
        * bidirectional streaming (many requests & many responses)
    - support for limited number of languages
    - share the service & payload schema beforehand

Steps:
    - Create service / operations / data contracts using protocol buffers
    - Share the contract between the client & server
    - Generate proxy & stub using the contracts
    - Server
        * implement the service (with the business logic) based on the contract
        * host the service
    - Client
        * Use the proxy to communicate to the service


Tools Installation
    1. Protocol Buffers Compiler (protoc tool)
        Windows:
            Download the file, extract and keep in a folder (PATH) accessble through the command line
            https://github.com/protocolbuffers/protobuf/releases/download/v21.12/protoc-21.12-win64.zip
        Mac:
            brew install protobuf

        Verification:
            protoc --version

    2. Go plugins (installed in the GOPATH/bin folder)
        go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.28
        go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.2

Application Setup
    /go.mod
    /client
    /server
    /proto
        - contracts
        - proxy & stub code generated

To generate proxy & stub, run the following command from the application root folder (folder that has the go.mod file)

protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative proto/service.proto

http services
    - Using ONLY the standard library (net/http package)
    - Using the routing library (mux, httprouter etc)
    - Using web framework (Gin etc)

Database operations
    - Using ONLY the standard library (database/sql)
    - Using Query Builders (squirrel, sqlc etc)
    - Using ORM (GORM etc)